plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

version = '2.0.43a'
group = 'com.very.vmd' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'vmd'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // official   MCVersion             Official field/method names from Mojang mapping files
    // parchment  YYYY.MM.DD-MCVersion  Open community-sourced parameter names and javadocs layered on top of official
    //
    // You must be aware of the Mojang license when using the 'official' or 'parchment' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Parchment is an unofficial project maintained by ParchmentMC, separate from MinecraftForge
    // Additional setup is needed to use their mappings: https://github.com/ParchmentMC/Parchment/wiki/Getting-Started
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.20.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'examplemod'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                examplemod {
                    source sourceSets.main
                }
            }

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    // flatDir {
    //     dir 'libs'
    // }
    maven {
        url = "https://maven.theillusivec4.top/"
    }

    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }

    maven { url 'https://maven.blamejared.com' }

    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        url 'https://maven.tterrag.com'
    }
}

dependencies {
    // Specify the version of Minecraft to use. If this is any group other than 'net.minecraft', it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency, and its patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.20.1-47.3.0'

    // Real mod deobf dependency examples - these get remapped to your current mappings
    // compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api") // Adds JEI API as a compile dependency
    // runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}") // Adds the full JEI mod as a runtime dependency
    // implementation fg.deobf("com.tterrag.registrate:Registrate:MC${mc_version}-${registrate_version}") // Adds registrate as a dependency

    // Examples using mod jars from ./libs
    // implementation fg.deobf("blank:coolmod-${mc_version}:${coolmod_version}")

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.9.0+1.20.1")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.9.0+1.20.1:api")
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.20.1:4.4.4')
    implementation fg.deobf("dev.kosmx.player-anim:player-animation-lib-forge:1.0.2-rc1+1.20")
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:[1.20.1-84-FORGE]:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:[1.20.1-84-FORGE]")

    implementation fg.deobf("curse.maven:MySQL-561280:3685108")

    implementation fg.deobf("curse.maven:serene-seasons-291874:4761603")
    implementation fg.deobf("curse.maven:sophisticated-backpacks-422301:4637294")
    implementation fg.deobf("curse.maven:create-328085:5838779")
    implementation fg.deobf("curse.maven:armourers-workshop-229523:5243770")
    implementation fg.deobf("curse.maven:sophisticated-core-618298:4643717")
    implementation fg.deobf("curse.maven:neat-238372:4580940")
    implementation fg.deobf("curse.maven:xaeros-world-map-317780:5073804")
    implementation fg.deobf("curse.maven:xaeros-minimap-263420:5060708")
    implementation fg.deobf("curse.maven:citadel-331936:5143956")
    implementation fg.deobf("curse.maven:lionfish-api-1001614:5274401")
    implementation fg.deobf("curse.maven:lendercataclysm-551586:5306430")
    implementation fg.deobf("curse.maven:born-in-chaos-686437:5084879")
    implementation fg.deobf("curse.maven:biomes-o-plenty-220318:4764804")
    implementation fg.deobf("curse.maven:ob-aquamirae-536254:4616373")
    implementation fg.deobf("curse.maven:obscure-api-638417:4616364")
    implementation fg.deobf("curse.maven:terrablender-563928:5315142")
    implementation fg.deobf("curse.maven:upgrade-aquatic-326895:5296565")
    implementation fg.deobf("curse.maven:blueprint-382216:5292242")
    implementation fg.deobf("curse.maven:william-wythers-overhauled-overworld-921022:4793728")
    implementation fg.deobf("curse.maven:tectonic-686836:5245755")
    implementation fg.deobf("curse.maven:when-dungeons-arise-442508:4983862")
    implementation fg.deobf("curse.maven:when-dungeons-arise-seven-seas-953637:4981380")
    implementation fg.deobf("curse.maven:choicetheorems-overhauled-village-623908:5249449")
    implementation fg.deobf("curse.maven:lithostitched-936015:5095048")
    implementation fg.deobf("curse.maven:mrcrayfish-furniture-mod-55438:4602980")
    implementation fg.deobf("curse.maven:additional-lights-384991:4596807")
    implementation fg.deobf("curse.maven:epic-samurais-848381:5216519")
    implementation fg.deobf("curse.maven:azurelib-817423:5330431")
    implementation fg.deobf("curse.maven:quark-243121:5346894")
    implementation fg.deobf("curse.maven:zeta-968868:5254672")
    implementation fg.deobf("curse.maven:additional-lights-384991:4596807")
    implementation fg.deobf("curse.maven:macaws-lights-and-lamps-502372:4618183")
    implementation fg.deobf("curse.maven:create-steam-n-rails-688231:5840017")
    // client :
    implementation fg.deobf("curse.maven:iceberg-520110:4953572")
    implementation fg.deobf("curse.maven:prism-lib-638111:4650325")
    implementation fg.deobf("curse.maven:legendary-tooltips-532127:4662781")
    implementation fg.deobf("curse.maven:loot-beams-506757:5139062")
    implementation fg.deobf("curse.maven:creativecore-257814:5342968")
    implementation fg.deobf("curse.maven:itemphysic-258587:5275217")
    implementation fg.deobf("curse.maven:puzzles-lib-495476:5330447")
    implementation fg.deobf("curse.maven:pick-up-notifier-351441:4613538")
    implementation fg.deobf("curse.maven:modern-ui-352491:5229575")
    implementation fg.deobf("curse.maven:modernfix-790626:5288164")
    implementation fg.deobf("curse.maven:bendy-lib-623373:4550371")
}

dependencies {
    jarJar(group: 'com.tterrag.registrate', name: 'Registrate', version: "[MC1.20-1.3.11,MC1.20-1.3.11]")
}

jarJar.enable()
reobf {
    jarJar { }
}

tasks.jarJar.finalizedBy('reobfJarJar')


// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "examplemod",
                "Specification-Vendor"    : "examplemodsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
